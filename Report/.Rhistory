library(DT)
library(Hmisc)
library(tidyverse)
library(tidyquant)
library(ggthemes)
library(RColorBrewer)
library(corrplot)
library(psych)
library(GGally)
library(corrr)
library(corrplot)
library(ggcorrplot)
library(kableExtra)
library(DataExplorer)
library(inspectdf)
library(dplyr)
library(corrplot)
library(caret)
attach(German_credit)
library(ggplot2)
# Select relevant workshop models to better understand
### EDA
str(German_credit)
#list of dummy variables to transform into factors
Binary_var <- c('NEW_CAR', 'USED_CAR', 'FURNITURE', 'RADIO.TV', 'EDUCATION', 'RETRAINING', 'MALE_DIV', 'MALE_SINGLE',
'MALE_MAR_or_WID', 'CO.APPLICANT', 'GURANTOR', 'REAL_ESTATE', 'PROP_UNKN_NONE',
'OTHER_INSTALL', 'RENT', 'OWN_RES', 'TELEPHONE', 'FOREIGN', 'RESPONSE')
# Define the variable good and bad credit according to 1 - 0
German_credit$Good_credit <- ifelse(German_credit$RESPONSE==1, 1, 0)
German_credit$Good_credit <-as.factor(German_credit$Good_credit)
# Visualization
head(German_credit)
# transform the binary and categorical variables as factors
# categorical:
German_credit$CHK_ACCT <- as.factor(German_credit$CHK_ACCT)
German_credit$HISTORY <- as.factor(German_credit$HISTORY)
German_credit$SAV_ACCT <- as.factor(German_credit$SAV_ACCT)
German_credit$EMPLOYMENT <- as.factor(German_credit$EMPLOYMENT)
German_credit$PRESENT_RESIDENT <- as.factor(German_credit$PRESENT_RESIDENT)
German_credit$JOB <- as.factor(German_credit$JOB)
# Binary:
German_credit$NEW_CAR <- as.factor(German_credit$NEW_CAR)
German_credit$USED_CAR <- as.factor(German_credit$USED_CAR)
German_credit$FURNITURE <- as.factor(German_credit$FURNITURE)
German_credit$RADIO.TV <- as.factor(German_credit$RADIO.TV)
German_credit$EDUCATION <- as.factor(German_credit$EDUCATION)
German_credit$RETRAINING <- as.factor(German_credit$RETRAINING)
German_credit$MALE_DIV <- as.factor(German_credit$MALE_DIV)
German_credit$MALE_SINGLE <- as.factor(German_credit$MALE_SINGLE)
German_credit$MALE_MAR_or_WID <- as.factor(German_credit$MALE_MAR_or_WID)
German_credit$CO.APPLICANT <- as.factor(German_credit$CO.APPLICANT)
German_credit$GURANTOR <- as.factor(German_credit$GURANTOR)
German_credit$REAL_ESTATE <- as.factor(German_credit$REAL_ESTATE)
German_credit$PROP_UNKN_NONE <- as.factor(German_credit$PROP_UNKN_NONE)
German_credit$OTHER_INSTALL <- as.factor(German_credit$OTHER_INSTALL)
German_credit$RENT <- as.factor(German_credit$RENT)
German_credit$OWN_RES <- as.factor(German_credit$OWN_RES)
German_credit$TELEPHONE <- as.factor(German_credit$TELEPHONE)
German_credit$FOREIGN <- as.factor(German_credit$FOREIGN)
German_credit$RESPONSE <- as.factor(German_credit$RESPONSE)
# 'error GUARANTOR variable '
# Easier way ?
# > German_credit[sapply(German_credit, is.logical)] <-lapply(German_credit[sapply(German_credit, is.logical)],as.factor)
# examine one variable by one.
dfSummary(German_credit, style = 'grid')
view(dfSummary(German_credit, style="grid",plain.ascii = FALSE, tmp.img.dir = "/tmp"))
# can analyse the proportions by each variables, one by one. 700 good credits
plot_intro(German_credit)
# Need to plot the numerical variables in histogram
plot_histogram(German_credit)
plot_density(German_credit)
# ANALYSIS OF RESPONSE variable
ggplot(German_credit) + geom_bar(aes(x = RESPONSE))
# Numerical variables and the response Good_credit
plot_boxplot(German_credit, by = 'Good_credit', ncol=2,title = "Side-by-side boxplots")
# Correspondance of 2 variables
ggplot(German_credit)+
aes(x=RESPONSE, y=AGE)+
geom_boxplot()
# Logistic regression to see the significant variables (not working)
mod1 <- glm(RESPONSE~., data = German_credit, family= binomial)
summary(mod1)
view(dfSummary(German_credit, style="grid",plain.ascii = FALSE, tmp.img.dir = "/tmp"))
dfSummary(German_credit, style = 'grid')
view(dfSummary(German_credit, style="grid",plain.ascii = FALSE, tmp.img.dir = "/tmp"))
German_credit <- read.csv("./../Data_DA/GermanCredit.csv", header = TRUE, sep = ";")
view(dfSummary(German_credit, style="grid",plain.ascii = FALSE, tmp.img.dir = "/tmp"))
dfSummary(German_credit, style = 'grid')
knitr::opts_chunk$set(echo = TRUE)
describe(German_credit)
source(here::here("scripts/setup.R"))
German_credit <- read.csv("./../Data_DA/GermanCredit.csv", header = TRUE, sep = ";")
str(German_credit)
summary(German_credit)
which(is.na(German_credit))
German_credit$DURATION <- as.numeric(German_credit$DURATION)
German_credit$AMOUNT <- as.numeric(German_credit$AMOUNT)
German_credit$INSTALL_RATE <- as.numeric(German_credit$INSTALL_RATE)
German_credit$AGE <- as.numeric(German_credit$AGE)
German_credit$NUM_CREDITS <- as.numeric(German_credit$NUM_CREDITS)
German_credit$NUM_DEPENDENTS <- as.numeric(German_credit$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="integer"){
German_credit[,i] <- factor(German_credit[,i])
}
}
str(German_credit)
View(German_credit)
German_credit$EDUCATION[37] <- 1
German_credit$GUARANTOR[234] <- 1
German_credit$AGE[537] <- 75
View(German_credit)
describe(German_credit)
introduce(German_credit)
plot_intro(German_credit)
str(German_credit)
German_credit$EDUCATION[37] <- 1
German_credit$GUARANTOR[234] <- 1
German_credit$AGE[537] <- 75
str(German_credit)
as.factor(German_credit$EDUCATION[37] <- 1)
as.factor(German_credit$GUARANTOR[234] <- 1)
German_credit$AGE[537] <- 75
str(German_credit)
German_credit$EDUCATION[37] <- 1
German_credit$EDUCATION <- as.factor(German_credit$EDUCATION)
German_credit$GUARANTOR[234] <- 1
German_credit$GUARANTOR <- as.factor(German_credit$GUARANTOR)
German_credit$AGE[537] <- 75
str(German_credit)
German_credit$AGE[537] <- 75
German_credit$DURATION <- as.numeric(German_credit$DURATION)
German_credit$AMOUNT <- as.numeric(German_credit$AMOUNT)
German_credit$INSTALL_RATE <- as.numeric(German_credit$INSTALL_RATE)
German_credit$AGE <- as.numeric(German_credit$AGE)
German_credit$NUM_CREDITS <- as.numeric(German_credit$NUM_CREDITS)
German_credit$NUM_DEPENDENTS <- as.numeric(German_credit$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="integer"){
German_credit[,i] <- factor(German_credit[,i])
}
}
str(German_credit)
German_credit$EDUCATION[37] <- 1
German_credit$EDUCATION <- as.factor(German_credit$EDUCATION)
German_credit$GUARANTOR[234] <- 1
German_credit$GUARANTOR <- as.factor(German_credit$GUARANTOR)
str(German_credit)
German_credit$EDUCATION <- as.factor(German_credit$EDUCATION)
(German_credit$EDUCATION <- as.factor(German_credit$EDUCATION))
levels(German_credit$EDUCATION)
German_credit <- read.csv("./../Data_DA/GermanCredit.csv", header = TRUE, sep = ";")
str(German_credit)
summary(German_credit)
German_credit$EDUCATION[37] <- 1
German_credit$GUARANTOR[234] <- 1
German_credit$AGE[537] <- 75
which(is.na(German_credit))
German_credit$DURATION <- as.numeric(German_credit$DURATION)
German_credit$AMOUNT <- as.numeric(German_credit$AMOUNT)
German_credit$INSTALL_RATE <- as.numeric(German_credit$INSTALL_RATE)
German_credit$AGE <- as.numeric(German_credit$AGE)
German_credit$NUM_CREDITS <- as.numeric(German_credit$NUM_CREDITS)
German_credit$NUM_DEPENDENTS <- as.numeric(German_credit$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="integer"){
German_credit[,i] <- factor(German_credit[,i])
}
}
str(German_credit)
str(German_credit)
summary(German_credit)
German_credit <- read.csv("./../Data_DA/GermanCredit.csv", header = TRUE, sep = ";")
str(German_credit)
summary(German_credit)
German_credit$EDUCATION[37] <- 1
German_credit$EDUCATION <- as.factor(German_credit$EDUCATION)
German_credit$GUARANTOR[234] <- 1
German_credit$GUARANTOR <- as.factor(German_credit$GUARANTOR)
German_credit$AGE[537] <- 75
which(is.na(German_credit))
German_credit$DURATION <- as.numeric(German_credit$DURATION)
German_credit$AMOUNT <- as.numeric(German_credit$AMOUNT)
German_credit$INSTALL_RATE <- as.numeric(German_credit$INSTALL_RATE)
German_credit$AGE <- as.numeric(German_credit$AGE)
German_credit$NUM_CREDITS <- as.numeric(German_credit$NUM_CREDITS)
German_credit$NUM_DEPENDENTS <- as.numeric(German_credit$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="integer"){
German_credit[,i] <- factor(German_credit[,i])
}
}
str(German_credit)
describe(German_credit)
introduce(German_credit)
plot_intro(German_credit)
plot_histogram(German_credit)
plot_density(German_credit)
plot_histogram(German_credit)
plot_density(German_credit)
plot_boxplot(German_credit, by = 'RESPONSE',  ncol = 2,
title = "Side-by-side boxplots")
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="factor"){
print(ggplot(German_credit) +
geom_bar(aes(x=German_credit[,i]), fill = "coral") +
ggtitle(paste("Barplot of", colnames(German_credit)[i])) +
labs(x = paste(colnames(German_credit)[i])))
}}
dfSummary(German_credit, style = 'grid')
plot_correlation(German_credit, type= 'd')
German_credit.num <- German_credit %>%
select('DURATION', 'AMOUNT', 'INSTALL_RATE', 'AGE', 'NUM_CREDITS','NUM_DEPENDENTS')
German_credit.pca <- prcomp(German_credit.num, center = TRUE)
summary(German_credit.pca)
fviz_eig(German_credit.pca)
library(factoextra)
fviz_eig(German_credit.pca)
fviz_pca_ind(German_credit.pca,
col.ind = "cos2", # Colorer par le cos2
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
fviz_pca_var(German_credit.pca,
col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
fviz_pca_biplot(German_credit.pca, repel = TRUE,
col.var = "#2E9FDF",
col.ind = "#696969"
)
write.csv(German_credit,"./../Data_DA/GermanCredit_cleaned.csv", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
German_credit <- read.csv("./../Data_DA/GermanCredit_cleaned.csv", header = TRUE, sep = ";")
# German_credit$DURATION <- as.numeric(German_credit$DURATION)
# German_credit$AMOUNT <- as.numeric(German_credit$AMOUNT)
# German_credit$INSTALL_RATE <- as.numeric(German_credit$INSTALL_RATE)
# German_credit$AGE <- as.numeric(German_credit$AGE)
# German_credit$NUM_CREDITS <- as.numeric(German_credit$NUM_CREDITS)
# German_credit$NUM_DEPENDENTS <- as.numeric(German_credit$NUM_DEPENDENTS)
#
# for (i in 1:ncol(German_credit)){
#   if (class(German_credit[,i])=="integer"){
#     German_credit[,i] <- factor(German_credit[,i])
#     }
# }
German_credit_cleaned <- read.csv("./../Data_DA/GermanCredit_cleaned.csv", header = TRUE, sep = ";")
# German_credit$DURATION <- as.numeric(German_credit$DURATION)
# German_credit$AMOUNT <- as.numeric(German_credit$AMOUNT)
# German_credit$INSTALL_RATE <- as.numeric(German_credit$INSTALL_RATE)
# German_credit$AGE <- as.numeric(German_credit$AGE)
# German_credit$NUM_CREDITS <- as.numeric(German_credit$NUM_CREDITS)
# German_credit$NUM_DEPENDENTS <- as.numeric(German_credit$NUM_DEPENDENTS)
#
# for (i in 1:ncol(German_credit)){
#   if (class(German_credit[,i])=="integer"){
#     German_credit[,i] <- factor(German_credit[,i])
#     }
# }
str(German_credit_cleaned)
knitr::opts_chunk$set(echo = TRUE)
source(here::here("scripts/setup.R"))
German_credit <- read.csv("./../Data_DA/GermanCredit.csv", header = TRUE, sep = ";")
str(German_credit)
summary(German_credit)
German_credit$EDUCATION[37] <- 1
German_credit$EDUCATION <- as.factor(German_credit$EDUCATION)
German_credit$GUARANTOR[234] <- 1
German_credit$GUARANTOR <- as.factor(German_credit$GUARANTOR)
German_credit$AGE[537] <- 75
which(is.na(German_credit))
German_credit$DURATION <- as.numeric(German_credit$DURATION)
German_credit$AMOUNT <- as.numeric(German_credit$AMOUNT)
German_credit$INSTALL_RATE <- as.numeric(German_credit$INSTALL_RATE)
German_credit$AGE <- as.numeric(German_credit$AGE)
German_credit$NUM_CREDITS <- as.numeric(German_credit$NUM_CREDITS)
German_credit$NUM_DEPENDENTS <- as.numeric(German_credit$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="integer"){
German_credit[,i] <- factor(German_credit[,i])
}
}
str(German_credit)
describe(German_credit)
introduce(German_credit)
plot_intro(German_credit)
plot_histogram(German_credit)
plot_density(German_credit)
plot_boxplot(German_credit, by = 'RESPONSE',  ncol = 2,
title = "Side-by-side boxplots")
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="factor"){
print(ggplot(German_credit) +
geom_bar(aes(x=German_credit[,i]), fill = "coral") +
ggtitle(paste("Barplot of", colnames(German_credit)[i])) +
labs(x = paste(colnames(German_credit)[i])))
}}
dfSummary(German_credit, style = 'grid')
plot_correlation(German_credit, type= 'c', cor_args = list( 'use' = 'complete.obs'))
plot_correlation(German_credit, type= 'd')
German_credit.num <- German_credit %>%
select('DURATION', 'AMOUNT', 'INSTALL_RATE', 'AGE', 'NUM_CREDITS','NUM_DEPENDENTS')
German_credit.pca <- prcomp(German_credit.num, center = TRUE)
summary(German_credit.pca)
fviz_eig(German_credit.pca)
fviz_pca_ind(German_credit.pca,
col.ind = "cos2", # Colorer par le cos2
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
fviz_pca_var(German_credit.pca,
col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
fviz_pca_biplot(German_credit.pca, repel = TRUE,
col.var = "#2E9FDF",
col.ind = "#696969"
)
write.csv(German_credit,"./../Data_DA/GermanCredit_cleaned.csv", row.names = FALSE)
German_credit_cleaned <- read.csv("./../Data_DA/GermanCredit_cleaned.csv", header = TRUE, sep = ";")
German_credit_cleaned <- read.csv("./../Data_DA/GermanCredit_cleaned.csv", header = TRUE)
View(German_credit_cleaned)
str(German_credit_cleaned)
German_credit_cleaned <- read.csv("./../Data_DA/GermanCredit_cleaned.csv", header = TRUE)
German_credit$DURATION <- as.numeric(German_credit$DURATION)
German_credit$AMOUNT <- as.numeric(German_credit$AMOUNT)
German_credit$INSTALL_RATE <- as.numeric(German_credit$INSTALL_RATE)
German_credit$AGE <- as.numeric(German_credit$AGE)
German_credit$NUM_CREDITS <- as.numeric(German_credit$NUM_CREDITS)
German_credit$NUM_DEPENDENTS <- as.numeric(German_credit$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="integer"){
German_credit[,i] <- factor(German_credit[,i])
}
}
str(German_credit_cleaned)
German_credit_cleaned <- read.csv("./../Data_DA/GermanCredit_cleaned.csv", header = TRUE)
German_credit_cleaned$DURATION <- as.numeric(German_credit_cleaned$DURATION)
German_credit_cleaned$AMOUNT <- as.numeric(German_credit_cleaned$AMOUNT)
German_credit_cleaned$INSTALL_RATE <- as.numeric(German_credit_cleaned$INSTALL_RATE)
German_credit_cleaned$AGE <- as.numeric(German_credit_cleaned$AGE)
German_credit_cleaned$NUM_CREDITS <- as.numeric(German_credit_cleaned$NUM_CREDITS)
German_credit_cleaned$NUM_DEPENDENTS <- as.numeric(German_credit_cleaned$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit_cleaned)){
if (class(German_credit_cleaned[,i])=="integer"){
German_credit_cleaned[,i] <- factor(German_credit_cleaned[,i])
}
}
str(German_credit_cleaned)
German_credit_cleaned <- read.csv("./../Data_DA/GermanCredit_cleaned.csv", header = TRUE)
str(German_credit_cleaned)
German_credit_cleaned <- read.csv("./../Data_DA/GermanCredit_cleaned.csv", header = TRUE, stringsAsFactors = TRUE)
str(German_credit_cleaned)
German_credit_cleaned$DURATION <- as.numeric(German_credit_cleaned$DURATION)
German_credit_cleaned$AMOUNT <- as.numeric(German_credit_cleaned$AMOUNT)
German_credit_cleaned$INSTALL_RATE <- as.numeric(German_credit_cleaned$INSTALL_RATE)
German_credit_cleaned$AGE <- as.numeric(German_credit_cleaned$AGE)
German_credit_cleaned$NUM_CREDITS <- as.numeric(German_credit_cleaned$NUM_CREDITS)
German_credit_cleaned$NUM_DEPENDENTS <- as.numeric(German_credit_cleaned$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit_cleaned)){
if (class(German_credit_cleaned[,i])=="integer"){
German_credit_cleaned[,i] <- factor(German_credit_cleaned[,i])
}
}
str(German_credit_cleaned)
german.ct <- rpart(RESPONSE ~ ., method = "class", data = German_credit)
summary(german.ct)
par(pty = "s", mar = c(1, 1, 1, 1))
plot(german.ct, cex = 1)
text(german.ct, cex = 0.6)
german.ct <- rpart(RESPONSE ~ ., method = "factor", data = German_credit)
german.ct <- rpart(RESPONSE ~ ., data = German_credit_cleaned)
summary(german.ct)
par(pty = "s", mar = c(1, 1, 1, 1))
plot(german.ct, cex = 1)
text(german.ct, cex = 0.6)
rpart.plot(german.ct)
library(rpart.plot)
rpart.plot(german.ct)
2/3
1/4
3/4¨
3/4
index.tr <- sample(x = 1:nrow(German_credit_cleaned), size= 3/4*nrow(German_credit_cleaned), replace=FALSE)
German_credit.tr <- German_credit_cleaned[index.tr,]
german.ct <- rpart(RESPONSE ~ ., data = German_credit.tr )
summary(german.ct)
german.ct <- rpart(RESPONSE ~ ., data = German_credit.tr )
summary(german.ct)
par(pty = "s", mar = c(1, 1, 1, 1))
plot(german.ct, cex = 1)
text(german.ct, cex = 0.6)
rpart.plot(german.ct)
# Logistic regression to see the significant variables (not working)
mod1 <- glm(RESPONSE~., data = German_credit, family= binomial)
# Logistic regression to see the significant variables (not working)
mod1 <- glm(RESPONSE~., data = German_credit_cleaned, family= binomial)
summary(mod1)
german.ct <- rpart(RESPONSE ~ ., method = "poisson", data = German_credit.tr )
summary(german.ct)
german.ct <- rpart(RESPONSE ~ ., method = "anova", data = German_credit.tr )
summary(german.ct)
german.ct <- rpart(RESPONSE ~ ., method = "exp", data = German_credit.tr )
german.ct <- rpart(RESPONSE ~ ., method = "class", data = German_credit.tr )
summary(german.ct)
par(pty = "s", mar = c(1, 1, 1, 1))
plot(german.ct, cex = 1)
text(german.ct, cex = 0.6)
rpart.plot(german.ct)
# training set
German_credit.tr <- German_credit_cleaned[index.tr,-1]
# test set
German_credit.te <- German_credit_cleaned[-index.tr,-1]
View(German_credit.te)
german.ct <- rpart(RESPONSE ~ ., method = "class", data = German_credit.tr )
summary(german.ct)
par(pty = "s", mar = c(1, 1, 1, 1))
plot(german.ct, cex = 1)
text(german.ct, cex = 0.6)
rpart.plot(german.ct)
# Logistic regression to see the significant variables (not working)
mod1 <- glm(RESPONSE~., data = German_credit_cleaned[, -1], family= binomial)
summary(mod1)
knitr::opts_chunk$set(echo = TRUE)
plotcp(german.ct)
knitr::opts_chunk$set(echo = TRUE)
German_credit_cleaned <- read.csv("./../Data_DA/GermanCredit_cleaned.csv", header = TRUE)
German_credit_cleaned$DURATION <- as.numeric(German_credit_cleaned$DURATION)
German_credit_cleaned$AMOUNT <- as.numeric(German_credit_cleaned$AMOUNT)
German_credit_cleaned$INSTALL_RATE <- as.numeric(German_credit_cleaned$INSTALL_RATE)
German_credit_cleaned$AGE <- as.numeric(German_credit_cleaned$AGE)
German_credit_cleaned$NUM_CREDITS <- as.numeric(German_credit_cleaned$NUM_CREDITS)
German_credit_cleaned$NUM_DEPENDENTS <- as.numeric(German_credit_cleaned$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit_cleaned)){
if (class(German_credit_cleaned[,i])=="integer"){
German_credit_cleaned[,i] <- factor(German_credit_cleaned[,i])
}
}
str(German_credit_cleaned)
set.seed(1234)
# indexes of the training set observations
index.tr <- sample(x = 1:nrow(German_credit_cleaned), size= 3/4*nrow(German_credit_cleaned), replace=FALSE)
# training set
German_credit.tr <- German_credit_cleaned[index.tr,-1]
# test set
German_credit.te <- German_credit_cleaned[-index.tr,-1]
german.ct <- rpart(RESPONSE ~ ., method = "class", data = German_credit.tr )
source(here::here("scripts/setup.R"))
source(here::here("scripts/setup.R"))
German_credit_cleaned <- read.csv("./../Data_DA/GermanCredit_cleaned.csv", header = TRUE)
German_credit_cleaned$DURATION <- as.numeric(German_credit_cleaned$DURATION)
German_credit_cleaned$AMOUNT <- as.numeric(German_credit_cleaned$AMOUNT)
German_credit_cleaned$INSTALL_RATE <- as.numeric(German_credit_cleaned$INSTALL_RATE)
German_credit_cleaned$AGE <- as.numeric(German_credit_cleaned$AGE)
German_credit_cleaned$NUM_CREDITS <- as.numeric(German_credit_cleaned$NUM_CREDITS)
German_credit_cleaned$NUM_DEPENDENTS <- as.numeric(German_credit_cleaned$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit_cleaned)){
if (class(German_credit_cleaned[,i])=="integer"){
German_credit_cleaned[,i] <- factor(German_credit_cleaned[,i])
}
}
str(German_credit_cleaned)
set.seed(1234)
# indexes of the training set observations
index.tr <- sample(x = 1:nrow(German_credit_cleaned), size= 3/4*nrow(German_credit_cleaned), replace=FALSE)
# training set
German_credit.tr <- German_credit_cleaned[index.tr,-1]
# test set
German_credit.te <- German_credit_cleaned[-index.tr,-1]
german.ct <- rpart(RESPONSE ~ ., method = "class", data = German_credit.tr )
summary(german.ct)
par(pty = "s", mar = c(1, 1, 1, 1))
plot(german.ct, cex = 1)
text(german.ct, cex = 0.6)
rpart.plot(german.ct)
plotcp(german.ct)
(0.052-0.016)
(0.052-0.016)/2
0.052-0.016
german.ct.prune <- prune(german.ct, cp=0.036)
rpart.plot(german.ct.prune)
german.ct.prune <- prune(german.ct, cp=0.029)
rpart.plot(german.ct.prune)
german.ct.prune <- prune(german.ct, cp=0.025)
rpart.plot(german.ct.prune)
german.ct.prune <- prune(german.ct, cp=0.029)
rpart.plot(german.ct.prune)
german.ct.prune <- prune(german.ct, cp=0.029)
rpart.plot(german.ct.prune)
german.ct.prune <- prune(german.ct, cp=0.029)
rpart.plot(german.ct.prune)
german.ct.prune <- prune(german.ct, cp=0.029)
rpart.plot(german.ct.prune)
set.seed(1234)
rpart.plot(autoprune(RESPONSE ~ ., method = "class", data = German_credit.tr))
library(adabag)
german.ct.prune <- prune(german.ct, cp=0.029)
rpart.plot(german.ct.prune)
set.seed(1234)
rpart.plot(autoprune(RESPONSE ~ ., method = "class", data = German_credit.tr))
set.seed(1234)
rpart.plot(autoprune(RESPONSE ~ ., method = "class", data = German_credit.tr))
german.ct.prediction <- predict(german.ct.prune, newdata=German_credit.te, type="class")
# Confusion Matrix
table(Pred=german.ct.prediction, Obs=German_credit.te$RESPONSE
View(German_credit.tr)
View(German_credit.te)
german.ct.prediction <- predict(german.ct.prune, newdata=German_credit.te, type="class")
# Confusion Matrix
table(Pred=german.ct.prediction, Obs=German_credit.te$RESPONSE)
