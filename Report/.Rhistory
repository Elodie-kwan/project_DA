knitr::opts_chunk$set(echo = TRUE)
German_credit <- read.csv("./Data_DA/GermanCredit.csv", header = TRUE, sep = ";")
German_credit <- read.csv("/Data_DA/GermanCredit.csv", header = TRUE, sep = ";")
German_credit <- read.csv("../../Data_DA/GermanCredit.csv", header = TRUE, sep = ";")
German_credit <- read.csv("./../Data_DA/GermanCredit.csv", header = TRUE, sep = ";")
View(German_credit)
# library(here)
library(dplyr)
library(Hmisc)
library(DataExplorer)
library(psych)
library(rpart)
str(German_credit)
summary(German_credit)
German_credit$DURATION <- as.numeric(German_credit$DURATION)
German_credit$AMOUNT <- as.numeric(German_credit$AMOUNT)
German_credit$INSTALL_RATE <- as.numeric(German_credit$INSTALL_RATE)
German_credit$AGE <- as.numeric(German_credit$AGE)
German_credit$NUM_CREDITS <- as.numeric(German_credit$NUM_CREDITS)
German_credit$NUM_DEPENDENTS <- as.numeric(German_credit$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="integer"){
German_credit[,i] <- factor(German_credit[,i])
}
}
str(German_credit)
describe(German_credit)
introduce(German_credit)
plot_intro(German_credit)
plot_histogram(German_credit)
plot_histogram(German_credit)
plot_density(German_credit)
plot_boxplot(German_credit, by = 'RESPONSE',  ncol = 2,
title = "Side-by-side boxplots")
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="factor"){
print(ggplot(German_credit) +
geom_bar(aes(x=German_credit[,i]), fill = "coral") +
ggtitle(paste("Barplot of", colnames(German_credit)[i])) +
labs(x = paste(colnames(German_credit)[i]))
)
}
}
par(mfrow=c(2,2))
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="factor"){
print(ggplot(German_credit) +
geom_bar(aes(x=German_credit[,i]), fill = "coral") +
ggtitle(paste("Barplot of", colnames(German_credit)[i])) +
labs(x = paste(colnames(German_credit)[i]))
)
}
}
par(mfrow=c(1,1))
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="factor"){
par(mfrow=c(2,2))
print(ggplot(German_credit) +
geom_bar(aes(x=German_credit[,i]), fill = "coral") +
ggtitle(paste("Barplot of", colnames(German_credit)[i])) +
labs(x = paste(colnames(German_credit)[i]))
)
}
}
par(mfrow=c(1,1))
barplots <- list()
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="factor"){
barplots[[i]]<- ggplot(German_credit) +
geom_bar(aes(x=German_credit[,i]), fill = "coral") +
ggtitle(paste("Barplot of", colnames(German_credit)[i])) +
labs(x = paste(colnames(German_credit)[i]))
}
}
do.call(grid.arrange, barplots)
library(gridExtra)
barplots <- list()
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="factor"){
barplots[[i]]<- ggplot(German_credit) +
geom_bar(aes(x=German_credit[,i]), fill = "coral") +
ggtitle(paste("Barplot of", colnames(German_credit)[i])) +
labs(x = paste(colnames(German_credit)[i]))
}
}
do.call(grid.arrange, barplots)
barplots <- list()
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="factor"){
barplots[[i]]<- ggplot(German_credit) +
geom_bar(aes(x=German_credit[,i]), fill = "coral") +
ggtitle(paste("Barplot of", colnames(German_credit)[i])) +
labs(x = paste(colnames(German_credit)[i]))
}
}
do.call(ggarrange, barplots)
#do.call(grid.arrange, barplots)
ggarrange(barplots)
library(ggpubr)
#do.call(grid.arrange, barplots)
ggarrange(barplots)
#do.call(grid.arrange, barplots)
ggarrange(plotlist = plot_list, ncow=2)
#do.call(grid.arrange, barplots)
ggarrange(plotlist = barplots, ncow=2)
#do.call(grid.arrange, barplots)
ggarrange(plotlist = barplots)
#do.call(grid.arrange, barplots)
ggarrange(plotlist = barplots, ncol=13)
#do.call(grid.arrange, barplots)
ggarrange(plotlist = barplots, nrow = 13)
ggarrange(plotlist = barplots, nrow = 13, ncol = 2)
#do.call(grid.arrange, barplots)
# ggarrange(plotlist = barplots, nrow = 13, ncol = 2)
grid.arrange(grobs=barplots, nrow=13)
barplots
par(mfrow=c(2,2))
barplots
par(mfrow=c(1,1))
library(cowplot)
plot_grid(plotlist = barplots, nrow = 13, ncol = 2)
View(barplots)
grid.arrange(for(i in length(!is.null(barplots[[i]]))), nrow = 13)
grid.arrange(for(i in length(!is.null(barplots[[i]]))){barplots[[i]]}, nrow = 13)
barplots %>%
grid.arrange( nrow = 4)
length(barplot)
length(barplot[[]])
length(barplot[[i]])
n <- length(barplots)
nCol <- floor(sqrt(n))
do.call("grid.arrange", c(barplots, ncol=nCol))
n <- length(barplots)
nCol <- floor(sqrt(n))
do.call("grid.arrange", c(barplots, ncol=nCol))
do.call("grid.arrange", c(barplots, nrow=13))
grid.arrange(barplots[[:]], nrow = 13)
grid.arrange(barplots[[1]], nrow = 13)
grid.arrange(barplots[[1:15]], ncol = 2)
grid.arrange(barplots[[1:3]], ncol = 2)
grid.arrange(barplots[[1]], ncol = 2)
grid.arrange(barplots[[1]], barplot[[2]], ncol = 2)
View(barplots)
grid.arrange(barplots[[1]], barplot[[2]], ncol = 2)
par(mfrow=c(2,2))
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="factor"){
ggplot(German_credit) +
geom_bar(aes(x=German_credit[,i]), fill = "coral") +
ggtitle(paste("Barplot of", colnames(German_credit)[i])) +
labs(x = paste(colnames(German_credit)[i]))
}
}
par(mfrow=c(1,1))
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="factor"){
print(ggplot(German_credit) +
geom_bar(aes(x=German_credit[,i]), fill = "coral") +
ggtitle(paste("Barplot of", colnames(German_credit)[i])) +
labs(x = paste(colnames(German_credit)[i])),
vp = vplayout(2, 2))
}
}
print(barplots)
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="factor"){
print(ggplot(German_credit) +
geom_bar(aes(x=German_credit[,i]), fill = "coral") +
ggtitle(paste("Barplot of", colnames(German_credit)[i])) +
labs(x = paste(colnames(German_credit)[i])))
}}
dfSummary(German_credit, style = 'grid')
view(dfSummary(German_credit, style="grid",plain.ascii = FALSE, tmp.img.dir = "/tmp"))
# examine one variable by one.
dfSummary(German_credit, style = 'grid')
library(summarytools)
dfSummary(German_credit, style = 'grid')
view(dfSummary(German_credit, style="grid",plain.ascii = FALSE, tmp.img.dir = "/tmp"))
dfSummary(German_credit, style = 'grid')
plot_intro(German_credit)
# ANALYSIS OF RESPONSE variable
ggplot(German_credit) + geom_bar(aes(x = RESPONSE))
# Numerical variables and the response Good_credit
plot_boxplot(German_credit, by = 'Good_credit', ncol=2,title = "Side-by-side boxplots")
German_credit <- read.csv("./../Data_DA/GermanCredit.csv", header = TRUE, sep = ";")
View(German_credit)
# Numerical variables and the response Good_credit
plot_boxplot(German_credit, by = 'Good_credit', ncol=2,title = "Side-by-side boxplots")
View(barplots)
View(German_credit)
str(German_credit)
#list of dummy variables to transform into factors
Binary_var <- c('NEW_CAR', 'USED_CAR', 'FURNITURE', 'RADIO.TV', 'EDUCATION', 'RETRAINING', 'MALE_DIV', 'MALE_SINGLE',
'MALE_MAR_or_WID', 'CO.APPLICANT', 'GURANTOR', 'REAL_ESTATE', 'PROP_UNKN_NONE',
'OTHER_INSTALL', 'RENT', 'OWN_RES', 'TELEPHONE', 'FOREIGN', 'RESPONSE')
# Define the variable good and bad credit according to 1 - 0
German_credit$Good_credit <- ifelse(German_credit$RESPONSE==1, 1, 0)
German_credit$Good_credit <-as.factor(German_credit$Good_credit)
# Visualization
head(German_credit)
# transform the binary and categorical variables as factors
# categorical:
German_credit$CHK_ACCT <- as.factor(German_credit$CHK_ACCT)
German_credit$HISTORY <- as.factor(German_credit$HISTORY)
German_credit$SAV_ACCT <- as.factor(German_credit$SAV_ACCT)
German_credit$EMPLOYMENT <- as.factor(German_credit$EMPLOYMENT)
German_credit$PRESENT_RESIDENT <- as.factor(German_credit$PRESENT_RESIDENT)
German_credit$JOB <- as.factor(German_credit$JOB)
# Binary:
German_credit$NEW_CAR <- as.factor(German_credit$NEW_CAR)
German_credit$USED_CAR <- as.factor(German_credit$USED_CAR)
German_credit$FURNITURE <- as.factor(German_credit$FURNITURE)
German_credit$RADIO.TV <- as.factor(German_credit$RADIO.TV)
German_credit$EDUCATION <- as.factor(German_credit$EDUCATION)
German_credit$RETRAINING <- as.factor(German_credit$RETRAINING)
German_credit$MALE_DIV <- as.factor(German_credit$MALE_DIV)
German_credit$MALE_SINGLE <- as.factor(German_credit$MALE_SINGLE)
German_credit$MALE_MAR_or_WID <- as.factor(German_credit$MALE_MAR_or_WID)
German_credit$CO.APPLICANT <- as.factor(German_credit$CO.APPLICANT)
German_credit$PROP_UNKN_NONE <- as.factor(German_credit$PROP_UNKN_NONE)
German_credit$OTHER_INSTALL <- as.factor(German_credit$OTHER_INSTALL)
German_credit$RENT <- as.factor(German_credit$RENT)
German_credit$OWN_RES <- as.factor(German_credit$OWN_RES)
German_credit$TELEPHONE <- as.factor(German_credit$TELEPHONE)
German_credit$FOREIGN <- as.factor(German_credit$FOREIGN)
German_credit$RESPONSE <- as.factor(German_credit$RESPONSE)
# examine one variable by one.
dfSummary(German_credit, style = 'grid')
dfSummary(German_credit, style = 'grid')
view(dfSummary(German_credit, style="grid",plain.ascii = FALSE, tmp.img.dir = "/tmp"))
# can analyse the proportions by each variables, one by one. 700 good credits
plot_intro(German_credit)
# Need to plot the numerical variables in histogram
plot_histogram(German_credit)
plot_density(German_credit)
# ANALYSIS OF RESPONSE variable
ggplot(German_credit) + geom_bar(aes(x = RESPONSE))
# Numerical variables and the response Good_credit
# Numerical variables and the response Good_credit
plot_boxplot(German_credit, by = 'Good_credit', ncol=2,title = "Side-by-side boxplots")
ggplot(German_credit)+
aes(x=RESPONSE, y=AGE)+
geom_boxplot()
mod1 <- glm(RESPONSE~., data = German_credit, family= binomial)
summary(mod1)
knitr::opts_chunk$set(echo = TRUE)
library(rpart)
german.ct <- rpart(RESPONSE ~ ., method = "class", data = German_credit)
summary(german.ct)
library(rpart)
German_credit <- read.csv("./../Data_DA/GermanCredit.csv", header = TRUE, sep = ";")
German_credit$DURATION <- as.numeric(German_credit$DURATION)
German_credit$AMOUNT <- as.numeric(German_credit$AMOUNT)
German_credit$INSTALL_RATE <- as.numeric(German_credit$INSTALL_RATE)
German_credit$AGE <- as.numeric(German_credit$AGE)
German_credit$NUM_CREDITS <- as.numeric(German_credit$NUM_CREDITS)
German_credit$NUM_DEPENDENTS <- as.numeric(German_credit$NUM_DEPENDENTS)
for (i in 1:ncol(German_credit)){
if (class(German_credit[,i])=="integer"){
German_credit[,i] <- factor(German_credit[,i])
}
}
